#!/usr/bin/env bash

set -e -o pipefail

bin=$(cd $(dirname ${BASH_SOURCE[0]}) && pwd)
base=$( cd ${bin}/.. && pwd )

if [ ! -d $base/tmp ]; then
  mkdir -p $base/tmp
fi

cleanup() {
  echo "Cleaning up"
  pkill -f "vagrant up" || true

  if [ "${SKIP_CLEANUP-false}" != "true" ]; then
    (cd integration/windows && vagrant destroy -f)
  else
    echo "SKIP_CLEANUP set to true, not destroying vagrant instances"
  fi

  if [ -f "$tmpfile" ]; then
    rm -rf $tmpfile
  fi
}

trap cleanup EXIT

# Vagrant needs ubuntu to own the private key if aws provider
tmpfile=`mktemp -t bosh-agent-tests-XXXXXXXX`
echo "${AWS_SSH_KEY}" > $tmpfile
export PRIVATE_KEY_PATH=$tmpfile

cd $base
echo -e "\n Running agent integration tests..."
$bin/env go clean -r github.com/cloudfoundry/bosh-agent/

echo -e "\n Installing ginkgo..."
$bin/go install ./vendor/github.com/onsi/ginkgo/ginkgo

echo -e "\n Running tests..."
focus=""
if [ ! -z "$BOSH_AGENT_INTEGRATION_FOCUS" ]; then
  focus="-focus=$BOSH_AGENT_INTEGRATION_FOCUS"
fi
bin/env ginkgo "$focus" -v -race -trace integration/windows/

exit 0
